import React, { useState, useEffect } from "react";
import { User, CareerPath } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { motion } from "framer-motion";
import {
  Brain,
  Star,
  Plus,
  ArrowRight,
  Target,
  BarChart,
  Lightbulb,
} from "lucide-react";

// Placeholder for a more complex visualization
const SkillNode = ({ skill, index }) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.5 }}
    animate={{ opacity: 1, scale: 1 }}
    transition={{ delay: index * 0.05 }}
    className="relative flex flex-col items-center justify-center p-4 rounded-full border-2 bg-white/80 backdrop-blur-sm"
    style={{
      width: `${60 + skill.level * 8}px`,
      height: `${60 + skill.level * 8}px`,
      borderColor: `hsl(220, 80%, ${90 - skill.level * 4}%)`,
    }}
  >
    <div className="text-center">
      <p
        className="font-bold text-slate-900"
        style={{ fontSize: `${10 + skill.level * 0.5}px` }}
      >
        {skill.name}
      </p>
      <p
        className="text-xs font-medium text-blue-600"
      >
        {skill.level}/10
      </p>
    </div>
  </motion.div>
);

export default function SkillMap() {
  const [user, setUser] = useState(null);
  const [careerPaths, setCareerPaths] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    setIsLoading(true);
    try {
      const [currentUser, allCareers] = await Promise.all([
        User.me(),
        CareerPath.list(),
      ]);
      setUser(currentUser);
      setCareerPaths(allCareers);
    } catch (error) {
      console.error("Error loading skill map data:", error);
    }
    setIsLoading(false);
  };

  const getSkillGaps = () => {
    if (!user || user.target_careers.length === 0) return [];
    
    const userSkills = user.current_skills.map(s => s.name);
    const targetCareer = careerPaths.find(c => c.title === user.target_careers[0]);
    
    if (!targetCareer) return [];

    return targetCareer.required_skills.filter(s => !userSkills.includes(s));
  };
  
  const getSuggestedSkills = () => {
    // Basic suggestion logic: find skills from related career paths
    if (!user) return [];
    const userInterests = user.interests || [];
    const relatedCareers = careerPaths.filter(c => userInterests.includes(c.category));
    const userSkills = user.current_skills.map(s => s.name);

    const suggestions = new Set();
    relatedCareers.forEach(career => {
      career.required_skills.forEach(skill => {
        if (!userSkills.includes(skill)) {
          suggestions.add(skill);
        }
      });
    });

    return Array.from(suggestions).slice(0, 5);
  };

  const skillGaps = getSkillGaps();
  const suggestedSkills = getSuggestedSkills();

  if (isLoading) {
    return (
      <div className="p-6 text-center">Loading your Skill Genome Map...</div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/30 p-6">
      <div className="max-w-7xl mx-auto space-y-8">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
          <div>
            <h1 className="text-3xl md:text-4xl font-bold text-slate-900 mb-2 flex items-center gap-3">
              <Brain className="w-8 h-8 text-blue-600" />
              Skill Genome Map
            </h1>
            <p className="text-slate-600 text-lg">
              Visualize your skills and discover your path to mastery.
            </p>
          </div>
          <Link to={createPageUrl("Profile")}>
            <Button variant="outline" className="gap-2">
              <Plus className="w-4 h-4" />
              Update Skills
            </Button>
          </Link>
        </div>

        <div className="grid lg:grid-cols-3 gap-8 items-start">
          {/* Main Skill Map */}
          <div className="lg:col-span-2">
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm min-h-[400px]">
              <CardHeader>
                <CardTitle className="text-xl font-bold text-slate-900">
                  Your Current Skills
                </CardTitle>
              </CardHeader>
              <CardContent>
                {user?.current_skills?.length > 0 ? (
                  <div className="flex flex-wrap items-center justify-center gap-6 p-4">
                    {user.current_skills.map((skill, index) => (
                      <SkillNode key={skill.name} skill={skill} index={index} />
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-12">
                    <p className="text-slate-600 mb-4">
                      No skills added yet. Add skills to build your genome map.
                    </p>
                    <Link to={createPageUrl("Profile")}>
                      <Button>Add Your First Skill</Button>
                    </Link>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-8">
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-lg font-bold text-slate-900 flex items-center gap-2">
                  <Target className="w-5 h-5 text-purple-600" />
                  Skill Gaps for Your Goal
                </CardTitle>
              </CardHeader>
              <CardContent>
                {user?.target_careers?.length > 0 ? (
                  <>
                    <p className="text-sm text-slate-600 mb-3">
                      Skills needed for:{" "}
                      <span className="font-semibold text-slate-800">
                        {user.target_careers[0]}
                      </span>
                    </p>
                    {skillGaps.length > 0 ? (
                      <div className="flex flex-wrap gap-2">
                        {skillGaps.map((skill) => (
                          <Badge key={skill} variant="outline">{skill}</Badge>
                        ))}
                      </div>
                    ) : (
                      <p className="text-sm text-green-600 font-medium">
                        You have all the core skills!
                      </p>
                    )}
                  </>
                ) : (
                  <p className="text-sm text-slate-500">
                    Set a target career in your profile to see skill gaps.
                  </p>
                )}
              </CardContent>
            </Card>

            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-lg font-bold text-slate-900 flex items-center gap-2">
                  <Lightbulb className="w-5 h-5 text-orange-500" />
                  Suggested Skills to Learn
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-slate-600 mb-3">
                  Based on your interests, consider learning:
                </p>
                {suggestedSkills.length > 0 ? (
                  <div className="space-y-2">
                    {suggestedSkills.map((skill) => (
                      <div key={skill} className="flex items-center justify-between text-sm p-2 bg-slate-50 rounded-lg">
                        <span className="font-medium text-slate-800">{skill}</span>
                        <Button variant="ghost" size="sm" className="h-auto px-2 py-1">
                          Explore
                        </Button>
                      </div>
                    ))}
                  </div>
                ) : (
                  <p className="text-sm text-slate-500">
                    Add interests to your profile for suggestions.
                  </p>
                )}
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}